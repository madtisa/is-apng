name: Lint / Test / Release

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

jobs:
  startup:
    name: Startup
    runs-on: ubuntu-latest
    steps:
      - shell: bash
        run: |
          echo "### Tested on:" > matrix.txt
      - name: Create matrix file
        uses: actions/upload-artifact@v3
        with:
          name: matrix-file
          path: matrix.txt

  test:
    name: Test (Node ${{ matrix.node-version }} on ${{ matrix.os }})
    needs: startup
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        node-version: [14.x, 16.x, 18.x]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          # cache: 'npm'
      - run: npm install
      - run: npm run lint
      - run: npm run build
      - run: npm run test

      - name: Download matrix file
        uses: actions/download-artifact@v3
        with:
          name: matrix-file
      - run: |
          s="$(<matrix.txt)"
          [[ ! -z "$s" ]] && s="${s}"$'\n'
          s="${s}"':white_check_mark: '"Node ${{ matrix.node-version }}"
          echo "$s" > matrix.txt
      - name: Upload matrix file
        uses: actions/upload-artifact@v3
        with:
          name: matrix-file
          path: matrix.txt
      # :white_check_mark:
      # :x:

  release:
    name: Create GitHub release
    needs: test
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    env:
      GITHUB_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          # token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
        # env:
        #   GITHUB_TOKEN: ${{ secrets.github_token }

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          registry-url: https://registry.npmjs.org/

      - name: Set Git user
        run: |
          git config --global user.name 'vHeemstra'
          git config --global user.email '17368112+vHeemstra@users.noreply.github.com'

      # - name: Set output
      #   id: vars
      #   run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
      # - name: Check output
      #   env:
      #     RELEASE_VERSION_VIA_OUTPUT: ${{ steps.vars.outputs.tag }}
      #   run: |
      #     echo $RELEASE_VERSION_VIA_OUTPUT
      #     echo ${{ steps.vars.outputs.tag }}

      # - name: Set env release version
      #   run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      # - name: Check env
      #   run: |
      #     echo $RELEASE_VERSION
      #     echo ${{ env.RELEASE_VERSION }}

      - name: Download matrix file
        uses: actions/download-artifact@v3
        with:
          name: matrix-file
      - name: Print matrix.txt
        shell: bash
        run: |
          value=`cat matrix.txt`
          echo $value

      - name: Create GitHub release
        run: |
          gh release create $GITHUB_REF_NAME --generate-notes --draft --notes-file matrix.txt
        # run: |
        #   gh release create ${{ env.RELEASE_VERSION }} --generate-notes --draft

      - name: Clean up artifacts
        uses: actions/github-script@v6
        with:
          # GITHUB_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          script: |
            const {GITHUB_RUN_ID, GITHUB_REPOSITORY} = process.env
            const artifactsURL = `/repos/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}/artifacts`
            console.log(`Deleting artifacs from ${artifactsURL}`)
            const response = await github.request(`GET ${artifactsURL}`)
            console.log(response.data)
            for (artifact of response.data.artifacts) {
              console.log(`Deleting artifact with name=${artifact.name}, id=${artifact.id}`)
              // const deleteResponse = await github.request(`DELETE /repos/${repo}/actions/artifacts/${artifact.id}`)
            }
      - uses: geekyeggo/delete-artifact@v2
        with:
          name: matrix-file
          failOnError: false
